[call-extension]
exten => _X.,1,Set(PEERNAME=${EXTEN})
; By manually checking for call-forwarding, the call can be forwarded even if the phone is unregistered
same => next,Set(CALLFORWARD=${SIPPEER(${PEERNAME},callforward)})
same => next,GotoIf($[${LEN(${CALLFORWARD})} != 0]?callforward,1)
same => next,Set(MAILBOX=${SIPPEER(${PEERNAME},mailbox)})
; Phones can be made to play a different ring using the Alert-Info header, see Ring Tones for examples
same => next,ExecIf($[${LEN(${ALERT_INFO})} != 0]?SIPAddHeader(Alert-Info: <${ALERT_INFO}>))
same => next,Dial(SIP/${PEERNAME},30)
same => next,Goto(${TOLOWER(${DIALSTATUS})},1)

; Check if forwarded to the phone's voicemail extension
exten => callforward,1,GotoIf($[${CALLFORWARD} = ${SIPPEER(${PEERNAME},vmexten)}]?busy,1)
; Cisco SIP phones support displaying diversion information
same => next,Set(REDIRECTING(from-all,i)="${SIPPEER(${PEERNAME},callerid_name)}" <${SIPPEER(${PEERNAME},callerid_num)}>)
same => next,Set(REDIRECTING(reason,i)=cfu)
same => next,Goto(extensions,${CALLFORWARD},1)

; If ${MAILBOX} is empty send congestion, otherwise go to voicemail extension below
exten => congestion,1,ExecIf($[${LEN(${MAILBOX})} = 0]?Congestion(10))
same => next,Set(GREETING=u)
same => next,Goto(voicemail,1)

; If ${MAILBOX} is empty send busy, otherwise go to voicemail extension below
exten => busy,1,ExecIf($[${LEN(${MAILBOX})} = 0]?Busy(10))
same => next,Set(GREETING=b)
same => next,Goto(voicemail,1)

exten => noanswer,1,Goto(congestion,1)
exten => chanunavail,1,Goto(congestion,1)

exten => voicemail,1,Answer()
same => next,Wait(0.5)
same => next,VoiceMail(${MAILBOX},${GREETING})
same => next,Hangup(normal_clearing)

[cisco]
exten => 301,1,Goto(call-extension,${EXTEN},1)
; Note the duplication of the hint peername
same => hint,SIP/301,SIP/301
exten => 302,1,Goto(call-extension,${EXTEN},1)
same => hint,SIP/302,SIP/302
exten => 303,1,Goto(call-extension,${EXTEN},1)
same => hint,SIP/303,SIP/303

; Intercom:
; Clear dial group first
exten => 390,1,Set(DIALGROUP(intercom)=)
; The list of SIP peers and their associated intercom line peer. List could be dynamically specified using EVAL() or DB() allowing for multiple intercom groups.
same => next,Set(PEERNAMES=301/391&302/392&303/393)
same => next,While($[${LEN(${PEERNAMES})} != 0])
same => next,Set(PEERNAME=${SHIFT(PEERNAMES,/)})
same => next,Set(INTERCOM_PEERNAME=${SHIFT(PEERNAMES,&)})
same => next,ExecIf($[${DEVICE_STATE(SIP/${PEERNAME})} = NOT_INUSE]?Set(DIALGROUP(intercom,add)=SIP/${INTERCOM_PEERNAME}))
same => next,EndWhile()
same => next,ExecIf($[${LEN(${DIALGROUP(intercom)})} = 0]?Busy(10))
same => next,Page(${DIALGROUP(intercom)},is,3)
same => next,Hangup(normal_clearing)

[cisco-features]
; Cisco features URL
exten => _[x]-cisco-serviceuri-.,1,Goto(${EXTEN:19},1)

; Call pickup
exten => pickup,1,Pickup()
same => next,Hangup(normal_circuit_congestion)

; Enable call-forwarding
exten => _cfwdall-.,1,Answer()
same => next,Set(SIPPEER(${CHANNEL(peername)},callforward)=${EXTEN:8})
same => next,Hangup(normal_clearing)

; Disable call-forwarding
exten => cfwdall,1,Answer()
same => next,Set(SIPPEER(${CHANNEL(peername)},callforward)=)
same => next,Hangup(normal_clearing)
